arch:
    validate_first: False
    max_epochs: 21
model:
    name: 'SemiSupEdgeModel'
    loss:
        supervised_method: 'sparse-silog'
        supervised_num_scales: 1
        supervised_loss_weight: 1.0
        depth_edges_loss_weight: 1.0
        edges_depth_edge_loss_all_scales: True
        upsample_depth_maps: False
    optimizer:
        name: 'Adam'
        depth:
            lr: 0.0001
        pose:
            lr: 0.0001
    scheduler:
        name: 'StepLR'
        step_size: 30
        gamma: 0.5
    depth_net:
        name: 'PackNetSAN01'
        version: '1A'
        dropout: 0.5
        checkpoint_path: 'checkpoints/PackNetSAN01_HR_sup_K.ckpt'
    params:
        crop: 'garg'
        min_depth: 0.0
        max_depth: 80.0
        scale_output: 'top-center'
datasets:
    augmentation:
        image_shape: (384, 1280)
#        image_shape: (192, 640)
#        image_shape: (384, 1280)
    train:
        batch_size: 3
        dataset: ['GTA']
        path: ['']
        split: ['data/kitti_eigen_zhou_gt_lidar_with_edges_from_edge_estimation_split_384x1280_all_multiscale_normals_new.txt']
        input_depth_type: ['velodyne']
        depth_type: ['groundtruth']
        repeat: [1]
        num_workers: 3

    validation:
        dataset: [ 'GTA' ]
        path: [ '' ]
        split: [ 'data/kitti_115_annotated_split_gt_depth_instead_of_lidar.txt' ]
        input_depth_type: [ 'velodyne' ]
        depth_type: [ 'groundtruth' ]
        num_workers: 3
edges:
    ########################## edges #########################

    # To train using edge loss or not895910
    train_depth_edges: True
    depth_edges_loss_weight: 10.0
    # output prediction gradient images (for debug)
    depth_edges_images_log: True
    # output edges metrics throughout training
    depth_edges_metric_log: True
    # True: get the edges GT from the "train_edge_list". False: compute the edges GT from the dense depth GT.
    use_external_edges_for_loss: True
    # type of edges loss
    edge_loss_type: "cross_entropy" # options: "cross_entropy", "grad_L1", "dice_grad_edge", "sharpen_edges", "distance_transform_gt", "nms", "nms_dist_transform"

    ########################## edges #########################

checkpoint:
    filepath: 'checkpoints'
    # just save all models
    save_top_k: -1
    save_freq: 2
